defmodule HCL.Parser.Common do
  import NimbleParsec
  def whitespace, do: ascii_string([?\s, ?\n], min: 1)
  def blankspace, do: ignore(ascii_string([?\s], min: 1))
  def newline, do: string("\n")
  def eq, do: string("=")
  def and_, do: string("&&")
  def or_, do: string("||")
  def not_, do: string("!")
  def sum, do: string("+")
  def diff, do: string("-")
  def product, do: string("*")
  def quotient, do: string("/")
  def remainder, do: string("%")
  def eqeq, do: string("==")
  def not_eq, do: not_() |> string("=")
  def lt, do: string("<")
  def gt, do: string(">")
  def lt_eq, do: string("<=")
  def gt_eq, do: string(">=")
  def dot, do: string(".")
  def comma, do: string(",")
  def colon, do: string(":")
  def wildcard, do: string("*")
  def identifier, do: ascii_string([?a..?z, ?A..?Z, ?-, ?_], min: 1)
  def open_brace, do: string("{")
  def close_brace, do: string("}")
  def open_brack, do: string("[")
  def close_brack, do: string("]")
  def open_parens, do: string("(")
  def close_parens, do: string(")")
  def fat_arrow, do: string("=>")
  def assign, do: choice([eq(), colon()])
  def int, do: integer(min: 1)
end
